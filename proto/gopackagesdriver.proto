syntax = "proto3";

package gopackagesdriver;

option go_package = "github.com/gonzojive/bazelgopackagesdriver/proto/gopackagesdriverpb";

// A simple key-value storage service
service GoPackagesDriverService {
    // Provides a value for each key request
    rpc LoadPackages (LoadPackagesRequest) returns (LoadPackagesResponse) {}

    // Checks the health of the server.
    rpc CheckStatus (CheckStatusRequest) returns (CheckStatusResponse) {}
}

message CheckStatusRequest {
}

message CheckStatusResponse {
    string debug_message = 1;
}

// The request message containing the key.
message LoadPackagesRequest {
    repeated string queries = 1;
    uint64 load_mode = 2;
}

// The GOPACKAGESDRIVER response object.
message LoadPackagesResponse {
    // JSON-encoded response.
    string raw_json = 1;
}

// ProcessInfo is information about an active GoPackagesDriverService instance.
message ProcessInfo {
    // The process ID of the running server.
    int64 pid = 1;

    // Address of the gRPC server running the GoPackagesDriverService service.
    string grpc_address = 2;
}
