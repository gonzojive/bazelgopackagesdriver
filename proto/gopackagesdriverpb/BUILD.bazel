load("@build_stack_rules_proto//rules:proto_compiled_sources.bzl", "proto_compiled_sources")
load("@build_stack_rules_proto//rules:proto_compile.bzl", "proto_compile")

# proto_compile(
#     name = "gopackagesdriver_go_proto",
#     # srcs = [
#     #     "gopackagesdriverpb.pb.go",
#     #     "gopackagesdriverpb_grpc.pb.go",
#     # ],
#     outputs = [
#         "gopackagesdriverpb.pb.go",
#         "gopackagesdriverpb_grpc.pb.go",
#     ],
#     output_mappings = [
#         "gopackagesdriverpb.pb.go=github.com/gonzojive/bazelgopackagesdriver/proto/gopackagesdriverpb/gopackagesdriver.pb.go",
#         "gopackagesdriverpb_grpc.pb.go=github.com/gonzojive/bazelgopackagesdriver/proto/gopackagesdriverpb/gopackagesdriver_grpc.pb.go",
#     ],
#     plugins = [
#         "@build_stack_rules_proto//plugin/golang/protobuf:protoc-gen-go",
#         "@build_stack_rules_proto//plugin/grpc/grpc-go:protoc-gen-go-grpc",
#     ],
#     proto = "gopackagesdriverpb_proto",
#     visibility = ["//proto:__subpackages__"],
# )

# Regenerate compiled source with
# bazel run  //proto/gopackagesdriverpb:compiled_sources.update
proto_compiled_sources(
    name = "compiled_sources",
    srcs = [
        "gopackagesdriverpb.pb.go",
        "gopackagesdriverpb_grpc.pb.go",
    ],
    output_mappings = [
        "gopackagesdriverpb.pb.go=github.com/gonzojive/bazelgopackagesdriver/proto/gopackagesdriverpb/gopackagesdriver.pb.go",
        "gopackagesdriverpb_grpc.pb.go=github.com/gonzojive/bazelgopackagesdriver/proto/gopackagesdriverpb/gopackagesdriver_grpc.pb.go",
    ],
    plugins = [
        "@build_stack_rules_proto//plugin/golang/protobuf:protoc-gen-go",
        "@build_stack_rules_proto//plugin/grpc/grpc-go:protoc-gen-go-grpc",
    ],
    proto = "//proto:gopackagesdriverpb_proto",
    visibility = ["//proto:__subpackages__"],
)
